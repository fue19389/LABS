

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 09 23:26:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	idataCOMMON
   213  022B                     __pidataCOMMON:
   214                           
   215                           ;initializer for _crctr3
   216  022B  340F               	retlw	15
   217                           
   218                           ;initializer for _crctr2
   219  022C  340F               	retlw	15
   220                           
   221                           ;initializer for _crctr1
   222  022D  3415               	retlw	21
   223                           
   224                           ;initializer for _crctr
   225  022E  3460               	retlw	96
   226                           
   227                           ;initializer for _bmenu
   228  022F  3401               	retlw	1
   229                           
   230                           	psect	idataBANK0
   231  0180                     __pidataBANK0:
   232                           
   233                           ;initializer for _cadena
   234  0180  3444               	retlw	68
   235  0181  3458               	retlw	88
   236  0182  3420               	retlw	32
   237  0183  346F               	retlw	111
   238  0184  3464               	retlw	100
   239  0185  346E               	retlw	110
   240  0186  3475               	retlw	117
   241  0187  346D               	retlw	109
   242  0188  3420               	retlw	32
   243  0189  3461               	retlw	97
   244  018A  346C               	retlw	108
   245  018B  346F               	retlw	111
   246  018C  3448               	retlw	72
   247  018D  340D               	retlw	13
   248  018E  343A               	retlw	58
   249  018F  3461               	retlw	97
   250  0190  346E               	retlw	110
   251  0191  3465               	retlw	101
   252  0192  3464               	retlw	100
   253  0193  3461               	retlw	97
   254  0194  3443               	retlw	67
   255                           
   256                           ;initializer for _pb
   257  0195  343A               	retlw	58
   258  0196  346F               	retlw	111
   259  0197  3476               	retlw	118
   260  0198  3465               	retlw	101
   261  0199  3475               	retlw	117
   262  019A  346E               	retlw	110
   263  019B  3420               	retlw	32
   264  019C  3472               	retlw	114
   265  019D  3465               	retlw	101
   266  019E  3474               	retlw	116
   267  019F  3463               	retlw	99
   268  01A0  3461               	retlw	97
   269  01A1  3472               	retlw	114
   270  01A2  3461               	retlw	97
   271  01A3  3443               	retlw	67
   272                           
   273                           ;initializer for _pa
   274  01A4  343A               	retlw	58
   275  01A5  346F               	retlw	111
   276  01A6  3476               	retlw	118
   277  01A7  3465               	retlw	101
   278  01A8  3475               	retlw	117
   279  01A9  346E               	retlw	110
   280  01AA  3420               	retlw	32
   281  01AB  3472               	retlw	114
   282  01AC  3465               	retlw	101
   283  01AD  3474               	retlw	116
   284  01AE  3463               	retlw	99
   285  01AF  3461               	retlw	97
   286  01B0  3472               	retlw	114
   287  01B1  3461               	retlw	97
   288  01B2  3443               	retlw	67
   289                           
   290                           	psect	idataBANK3
   291  0120                     __pidataBANK3:
   292                           
   293                           ;initializer for _menu
   294  0120  3442               	retlw	66
   295  0121  3454               	retlw	84
   296  0122  3452               	retlw	82
   297  0123  344F               	retlw	79
   298  0124  3450               	retlw	80
   299  0125  3420               	retlw	32
   300  0126  3472               	retlw	114
   301  0127  3461               	retlw	97
   302  0128  3469               	retlw	105
   303  0129  3462               	retlw	98
   304  012A  346D               	retlw	109
   305  012B  3461               	retlw	97
   306  012C  3443               	retlw	67
   307  012D  3420               	retlw	32
   308  012E  3429               	retlw	41
   309  012F  3433               	retlw	51
   310  0130  3428               	retlw	40
   311  0131  340D               	retlw	13
   312  0132  3441               	retlw	65
   313  0133  3454               	retlw	84
   314  0134  3452               	retlw	82
   315  0135  344F               	retlw	79
   316  0136  3450               	retlw	80
   317  0137  3420               	retlw	32
   318  0138  3472               	retlw	114
   319  0139  3461               	retlw	97
   320  013A  3469               	retlw	105
   321  013B  3462               	retlw	98
   322  013C  346D               	retlw	109
   323  013D  3461               	retlw	97
   324  013E  3443               	retlw	67
   325  013F  3420               	retlw	32
   326  0140  3429               	retlw	41
   327  0141  3432               	retlw	50
   328  0142  3428               	retlw	40
   329  0143  340D               	retlw	13
   330  0144  3473               	retlw	115
   331  0145  3465               	retlw	101
   332  0146  3472               	retlw	114
   333  0147  3465               	retlw	101
   334  0148  3474               	retlw	116
   335  0149  3463               	retlw	99
   336  014A  3461               	retlw	97
   337  014B  3472               	retlw	114
   338  014C  3461               	retlw	97
   339  014D  3463               	retlw	99
   340  014E  3420               	retlw	32
   341  014F  3465               	retlw	101
   342  0150  3464               	retlw	100
   343  0151  3420               	retlw	32
   344  0152  3461               	retlw	97
   345  0153  346E               	retlw	110
   346  0154  3465               	retlw	101
   347  0155  3464               	retlw	100
   348  0156  3461               	retlw	97
   349  0157  3463               	retlw	99
   350  0158  3420               	retlw	32
   351  0159  3472               	retlw	114
   352  015A  3461               	retlw	97
   353  015B  3467               	retlw	103
   354  015C  3465               	retlw	101
   355  015D  346C               	retlw	108
   356  015E  3470               	retlw	112
   357  015F  3473               	retlw	115
   358  0160  3465               	retlw	101
   359  0161  3444               	retlw	68
   360  0162  3420               	retlw	32
   361  0163  3429               	retlw	41
   362  0164  3431               	retlw	49
   363  0165  3428               	retlw	40
   364  0166  340D               	retlw	13
   365  0167  3472               	retlw	114
   366  0168  3461               	retlw	97
   367  0169  3474               	retlw	116
   368  016A  3475               	retlw	117
   369  016B  3463               	retlw	99
   370  016C  3465               	retlw	101
   371  016D  346A               	retlw	106
   372  016E  3465               	retlw	101
   373  016F  3420               	retlw	32
   374  0170  3461               	retlw	97
   375  0171  3465               	retlw	101
   376  0172  3473               	retlw	115
   377  0173  3465               	retlw	101
   378  0174  3464               	retlw	100
   379  0175  3420               	retlw	32
   380  0176  346E               	retlw	110
   381  0177  346F               	retlw	111
   382  0178  3469               	retlw	105
   383  0179  3463               	retlw	99
   384  017A  3463               	retlw	99
   385  017B  3461               	retlw	97
   386  017C  3420               	retlw	32
   387  017D  3465               	retlw	101
   388  017E  3475               	retlw	117
   389  017F  3451               	retlw	81
   390  000B                     _INTCONbits	set	11
   391  0018                     _RCSTAbits	set	24
   392  0008                     _PORTD	set	8
   393  0005                     _PORTA	set	5
   394  0006                     _PORTB	set	6
   395  001A                     _RCREG	set	26
   396  0019                     _TXREG	set	25
   397  000C                     _PIR1bits	set	12
   398  008C                     _PIE1bits	set	140
   399  009A                     _SPBRGH	set	154
   400  0099                     _SPBRG	set	153
   401  0098                     _TXSTAbits	set	152
   402  008F                     _OSCCONbits	set	143
   403  0086                     _TRISB	set	134
   404  0088                     _TRISD	set	136
   405  0085                     _TRISA	set	133
   406  0187                     _BAUDCTLbits	set	391
   407  0188                     _ANSEL	set	392
   408  0189                     _ANSELH	set	393
   409                           
   410                           	psect	cinit
   411  0011                     start_initialization:	
   412                           ; #config settings
   413                           
   414  0011                     __initialization:
   415                           
   416                           ; Initialize objects allocated to BANK3
   417  0011  1783               	bsf	3,7	;select IRP bank2
   418  0012  30F0               	movlw	low (__pdataBANK3+96)
   419  0013  00FD               	movwf	btemp+-1
   420  0014  3001               	movlw	high __pidataBANK3
   421  0015  00FE               	movwf	btemp
   422  0016  3020               	movlw	low __pidataBANK3
   423  0017  00FF               	movwf	btemp+1
   424  0018  3090               	movlw	low __pdataBANK3
   425  0019  0084               	movwf	4
   426  001A  120A  118A  221C  120A  118A  	fcall	init_ram0
   427                           
   428                           ; Initialize objects allocated to BANK0
   429  001F  1383               	bcf	3,7	;select IRP bank0
   430  0020  3053               	movlw	low (__pdataBANK0+51)
   431  0021  00FD               	movwf	btemp+-1
   432  0022  3001               	movlw	high __pidataBANK0
   433  0023  00FE               	movwf	btemp
   434  0024  3080               	movlw	low __pidataBANK0
   435  0025  00FF               	movwf	btemp+1
   436  0026  3020               	movlw	low __pdataBANK0
   437  0027  0084               	movwf	4
   438  0028  120A  118A  221C  120A  118A  	fcall	init_ram0
   439                           
   440                           ; Initialize objects allocated to COMMON
   441  002D  120A  118A  222B  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   442  0032  00F7               	movwf	__pdataCOMMON& (0+127)
   443  0033  120A  118A  222C  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   444  0038  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   445  0039  120A  118A  222D  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   446  003E  00F9               	movwf	(__pdataCOMMON+2)& (0+127)
   447  003F  120A  118A  222E  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   448  0044  00FA               	movwf	(__pdataCOMMON+3)& (0+127)
   449  0045  120A  118A  222F  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   450  004A  00FB               	movwf	(__pdataCOMMON+4)& (0+127)
   451                           
   452                           ; Clear objects allocated to COMMON
   453  004B  01FC               	clrf	__pbssCOMMON& (0+127)
   454  004C  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   455  004D                     end_of_initialization:	
   456                           ;End of C runtime variable initialization code
   457                           
   458  004D                     __end_of__initialization:
   459  004D  0183               	clrf	3
   460  004E  120A  118A  29E6   	ljmp	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMMON
   463  007C                     __pbssCOMMON:
   464  007C                     _op2:
   465  007C                     	ds	1
   466  007D                     _op1:
   467  007D                     	ds	1
   468                           
   469                           	psect	dataCOMMON
   470  0077                     __pdataCOMMON:
   471  0077                     _crctr3:
   472  0077                     	ds	1
   473  0078                     _crctr2:
   474  0078                     	ds	1
   475  0079                     _crctr1:
   476  0079                     	ds	1
   477  007A                     _crctr:
   478  007A                     	ds	1
   479  007B                     _bmenu:
   480  007B                     	ds	1
   481                           
   482                           	psect	dataBANK0
   483  0020                     __pdataBANK0:
   484  0020                     _cadena:
   485  0020                     	ds	21
   486  0035                     _pb:
   487  0035                     	ds	15
   488  0044                     _pa:
   489  0044                     	ds	15
   490                           
   491                           	psect	dataBANK3
   492  0190                     __pdataBANK3:
   493  0190                     _menu:
   494  0190                     	ds	96
   495                           
   496                           	psect	inittext
   497  0218                     init_fetch0:	
   498                           ;	Called with low address in FSR and high address in W
   499                           
   500  0218  087E               	movf	btemp,w
   501  0219  008A               	movwf	10
   502  021A  087F               	movf	btemp+1,w
   503  021B  0082               	movwf	2
   504  021C                     init_ram0:	
   505                           ;Called with:
   506                           ;	high address of idata address in btemp 
   507                           ;	low address of idata address in btemp+1 
   508                           ;	low address of data in FSR
   509                           ;	high address + 1 of data in btemp-1
   510                           
   511  021C  120A  118A  2218  120A  118A  	fcall	init_fetch0
   512  0221  0080               	movwf	0
   513  0222  0A84               	incf	4,f
   514  0223  0804               	movf	4,w
   515  0224  067D               	xorwf	btemp+-1,w
   516  0225  1903               	btfsc	3,2
   517  0226  3400               	retlw	0
   518  0227  0AFF               	incf	btemp+1,f
   519  0228  1903               	btfsc	3,2
   520  0229  0AFE               	incf	btemp,f
   521  022A  2A1C               	goto	init_ram0
   522                           
   523                           	psect	cstackCOMMON
   524  0070                     __pcstackCOMMON:
   525  0070                     ?_setup:
   526  0070                     ?_isr:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_isr:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 1 bytes @ 0x0
   537  0070                     	ds	6
   538  0076                     ??_setup:
   539  0076                     ??_main:	
   540                           ; 1 bytes @ 0x6
   541                           
   542                           
   543                           ; 1 bytes @ 0x6
   544  0076                     	ds	1
   545                           
   546                           	psect	maintext
   547  01E6                     __pmaintext:	
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 146 in file "LAB10.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : B00/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          1       0       0       0       0
   570 ;;      Totals:         1       0       0       0       0
   571 ;;Total ram usage:        1 bytes
   572 ;; Hardware stack levels required when called:    2
   573 ;; This function calls:
   574 ;;		_setup
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _main
   582  01E6                     _main:
   583  01E6                     l800:	
   584                           ;incstack = 0
   585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   586                           
   587                           
   588                           ;LAB10.c: 147:     setup();
   589  01E6  120A  118A  21B3  120A  118A  	fcall	_setup
   590  01EB                     l802:
   591                           
   592                           ;LAB10.c: 155:         if(PIR1bits.TXIF){
   593  01EB  1283               	bcf	3,5	;RP0=0, select bank0
   594  01EC  1303               	bcf	3,6	;RP1=0, select bank0
   595  01ED  1E0C               	btfss	12,4	;volatile
   596  01EE  29F0               	goto	u121
   597  01EF  29F1               	goto	u120
   598  01F0                     u121:
   599  01F0  29EB               	goto	l802
   600  01F1                     u120:
   601  01F1                     l804:
   602                           
   603                           ;LAB10.c: 157:             if (bmenu == 1){
   604  01F1  037B               	decf	_bmenu,w
   605  01F2  1D03               	btfss	3,2
   606  01F3  29F5               	goto	u131
   607  01F4  29F6               	goto	u130
   608  01F5                     u131:
   609  01F5  29EB               	goto	l802
   610  01F6                     u130:
   611  01F6                     l806:
   612                           
   613                           ;LAB10.c: 158:                 TXREG = 12;
   614  01F6  300C               	movlw	12
   615  01F7  0099               	movwf	25	;volatile
   616                           
   617                           ;LAB10.c: 159:                 while (crctr > 0){
   618  01F8  2A0A               	goto	l814
   619  01F9                     l808:
   620                           
   621                           ;LAB10.c: 160:                     crctr = crctr - 1;
   622  01F9  087A               	movf	_crctr,w
   623  01FA  3EFF               	addlw	255
   624  01FB  00F6               	movwf	??_main
   625  01FC  0876               	movf	??_main,w
   626  01FD  00FA               	movwf	_crctr
   627  01FE                     l810:
   628                           
   629                           ;LAB10.c: 161:                     TXREG = menu[crctr];
   630  01FE  087A               	movf	_crctr,w
   631  01FF  3E90               	addlw	(low (_menu| (0+256)))& (0+255)
   632  0200  0084               	movwf	4
   633  0201  1783               	bsf	3,7	;select IRP bank3
   634  0202  0800               	movf	0,w
   635  0203  1283               	bcf	3,5	;RP0=0, select bank0
   636  0204  1303               	bcf	3,6	;RP1=0, select bank0
   637  0205  0099               	movwf	25	;volatile
   638  0206                     l812:
   639                           
   640                           ;LAB10.c: 162:                     _delay((unsigned long)((1)*(1000000/4000.0)));
   641  0206  3053               	movlw	83
   642  0207  00F6               	movwf	??_main
   643  0208                     u157:
   644  0208  0BF6               	decfsz	??_main,f
   645  0209  2A08               	goto	u157
   646  020A                     l814:
   647                           
   648                           ;LAB10.c: 159:                 while (crctr > 0){
   649  020A  087A               	movf	_crctr,w
   650  020B  1D03               	btfss	3,2
   651  020C  2A0E               	goto	u141
   652  020D  2A0F               	goto	u140
   653  020E                     u141:
   654  020E  29F9               	goto	l808
   655  020F                     u140:
   656  020F                     l816:
   657                           
   658                           ;LAB10.c: 164:                 crctr = 96;
   659  020F  3060               	movlw	96
   660  0210  00F6               	movwf	??_main
   661  0211  0876               	movf	??_main,w
   662  0212  00FA               	movwf	_crctr
   663  0213                     l818:
   664                           
   665                           ;LAB10.c: 165:                 bmenu = 0;
   666  0213  01FB               	clrf	_bmenu
   667  0214  29EB               	goto	l802
   668  0215  120A  118A  280E   	ljmp	start
   669  0218                     __end_of_main:
   670                           
   671                           	psect	text1
   672  01B3                     __ptext1:	
   673 ;; *************** function _setup *****************
   674 ;; Defined at:
   675 ;;		line 175 in file "LAB10.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _setup
   705  01B3                     _setup:
   706  01B3                     l698:	
   707                           ;incstack = 0
   708                           ; Regs used in _setup: [wreg+status,2+status,0]
   709                           
   710                           
   711                           ;LAB10.c: 176:     ANSELH = 0x00;
   712  01B3  1683               	bsf	3,5	;RP0=1, select bank3
   713  01B4  1703               	bsf	3,6	;RP1=1, select bank3
   714  01B5  0189               	clrf	9	;volatile
   715                           
   716                           ;LAB10.c: 177:     ANSEL = 0x00;
   717  01B6  0188               	clrf	8	;volatile
   718                           
   719                           ;LAB10.c: 179:     TRISA = 0;
   720  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   721  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   722  01B9  0185               	clrf	5	;volatile
   723                           
   724                           ;LAB10.c: 180:     PORTA = 0x00;
   725  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   726  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   727  01BC  0185               	clrf	5	;volatile
   728                           
   729                           ;LAB10.c: 181:     TRISD = 0;
   730  01BD  1683               	bsf	3,5	;RP0=1, select bank1
   731  01BE  1303               	bcf	3,6	;RP1=0, select bank1
   732  01BF  0188               	clrf	8	;volatile
   733                           
   734                           ;LAB10.c: 182:     PORTD = 0x00;
   735  01C0  1283               	bcf	3,5	;RP0=0, select bank0
   736  01C1  1303               	bcf	3,6	;RP1=0, select bank0
   737  01C2  0188               	clrf	8	;volatile
   738                           
   739                           ;LAB10.c: 183:     TRISB = 0;
   740  01C3  1683               	bsf	3,5	;RP0=1, select bank1
   741  01C4  1303               	bcf	3,6	;RP1=0, select bank1
   742  01C5  0186               	clrf	6	;volatile
   743                           
   744                           ;LAB10.c: 184:     PORTB = 0x00;
   745  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   746  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   747  01C8  0186               	clrf	6	;volatile
   748  01C9                     l700:
   749                           
   750                           ;LAB10.c: 188:     OSCCONbits.IRCF = 0b100;
   751  01C9  1683               	bsf	3,5	;RP0=1, select bank1
   752  01CA  1303               	bcf	3,6	;RP1=0, select bank1
   753  01CB  080F               	movf	15,w	;volatile
   754  01CC  398F               	andlw	-113
   755  01CD  3840               	iorlw	64
   756  01CE  008F               	movwf	15	;volatile
   757  01CF                     l702:
   758                           
   759                           ;LAB10.c: 189:     OSCCONbits.SCS = 1;
   760  01CF  140F               	bsf	15,0	;volatile
   761  01D0                     l704:
   762                           
   763                           ;LAB10.c: 192:     TXSTAbits.SYNC = 0;
   764  01D0  1218               	bcf	24,4	;volatile
   765  01D1                     l706:
   766                           
   767                           ;LAB10.c: 193:     TXSTAbits.BRGH = 1;
   768  01D1  1518               	bsf	24,2	;volatile
   769  01D2                     l708:
   770                           
   771                           ;LAB10.c: 195:     BAUDCTLbits.BRG16 = 1;
   772  01D2  1683               	bsf	3,5	;RP0=1, select bank3
   773  01D3  1703               	bsf	3,6	;RP1=1, select bank3
   774  01D4  1587               	bsf	7,3	;volatile
   775  01D5                     l710:
   776                           
   777                           ;LAB10.c: 197:     SPBRG = 25;
   778  01D5  3019               	movlw	25
   779  01D6  1683               	bsf	3,5	;RP0=1, select bank1
   780  01D7  1303               	bcf	3,6	;RP1=0, select bank1
   781  01D8  0099               	movwf	25	;volatile
   782  01D9                     l712:
   783                           
   784                           ;LAB10.c: 198:     SPBRGH = 0;
   785  01D9  019A               	clrf	26	;volatile
   786  01DA                     l714:
   787                           
   788                           ;LAB10.c: 200:     RCSTAbits.SPEN = 1;
   789  01DA  1283               	bcf	3,5	;RP0=0, select bank0
   790  01DB  1303               	bcf	3,6	;RP1=0, select bank0
   791  01DC  1798               	bsf	24,7	;volatile
   792  01DD                     l716:
   793                           
   794                           ;LAB10.c: 201:     RCSTAbits.RX9 = 0;
   795  01DD  1318               	bcf	24,6	;volatile
   796  01DE                     l718:
   797                           
   798                           ;LAB10.c: 202:     RCSTAbits.CREN = 1;
   799  01DE  1618               	bsf	24,4	;volatile
   800  01DF                     l720:
   801                           
   802                           ;LAB10.c: 204:     TXSTAbits.TXEN = 1;
   803  01DF  1683               	bsf	3,5	;RP0=1, select bank1
   804  01E0  1303               	bcf	3,6	;RP1=0, select bank1
   805  01E1  1698               	bsf	24,5	;volatile
   806  01E2                     l722:
   807                           
   808                           ;LAB10.c: 208:     INTCONbits.GIE = 1;
   809  01E2  178B               	bsf	11,7	;volatile
   810  01E3                     l724:
   811                           
   812                           ;LAB10.c: 209:     INTCONbits.PEIE = 1;
   813  01E3  170B               	bsf	11,6	;volatile
   814  01E4                     l726:
   815                           
   816                           ;LAB10.c: 210:     PIE1bits.RCIE = 1;
   817  01E4  168C               	bsf	12,5	;volatile
   818  01E5                     l106:
   819  01E5  0008               	return
   820  01E6                     __end_of_setup:
   821                           
   822                           	psect	text2
   823  0051                     __ptext2:	
   824 ;; *************** function _isr *****************
   825 ;; Defined at:
   826 ;;		line 78 in file "LAB10.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0
   842 ;;      Temps:          6       0       0       0       0
   843 ;;      Totals:         6       0       0       0       0
   844 ;;Total ram usage:        6 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		Interrupt level 1
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           
   854                           ;psect for function _isr
   855  0051                     _isr:
   856  0051                     i1l728:
   857                           
   858                           ;LAB10.c: 80:     if (PIR1bits.RCIF){
   859  0051  1283               	bcf	3,5	;RP0=0, select bank0
   860  0052  1303               	bcf	3,6	;RP1=0, select bank0
   861  0053  1E8C               	btfss	12,5	;volatile
   862  0054  2856               	goto	u1_21
   863  0055  2857               	goto	u1_20
   864  0056                     u1_21:
   865  0056  2917               	goto	i1l90
   866  0057                     u1_20:
   867  0057                     i1l730:
   868                           
   869                           ;LAB10.c: 82:         TXREG = 12;
   870  0057  300C               	movlw	12
   871  0058  0099               	movwf	25	;volatile
   872  0059                     i1l732:
   873                           
   874                           ;LAB10.c: 85:         if (RCREG == 51){
   875  0059  3033               	movlw	51
   876  005A  061A               	xorwf	26,w	;volatile
   877  005B  1D03               	btfss	3,2
   878  005C  285E               	goto	u2_21
   879  005D  285F               	goto	u2_20
   880  005E                     u2_21:
   881  005E  289E               	goto	i1l758
   882  005F                     u2_20:
   883  005F  2871               	goto	i1l742
   884  0060                     i1l736:
   885                           
   886                           ;LAB10.c: 87:                 crctr3 = crctr3-1;
   887  0060  0877               	movf	_crctr3,w
   888  0061  3EFF               	addlw	255
   889  0062  00F0               	movwf	??_isr
   890  0063  0870               	movf	??_isr,w
   891  0064  00F7               	movwf	_crctr3
   892  0065                     i1l738:
   893                           
   894                           ;LAB10.c: 88:                 TXREG = pb[crctr3];
   895  0065  0877               	movf	_crctr3,w
   896  0066  3E35               	addlw	(low (_pb| 0))& (0+255)
   897  0067  0084               	movwf	4
   898  0068  1383               	bcf	3,7	;select IRP bank0
   899  0069  0800               	movf	0,w
   900  006A  1283               	bcf	3,5	;RP0=0, select bank0
   901  006B  1303               	bcf	3,6	;RP1=0, select bank0
   902  006C  0099               	movwf	25	;volatile
   903  006D                     i1l740:
   904                           
   905                           ;LAB10.c: 89:                 _delay((unsigned long)((1)*(1000000/4000.0)));
   906  006D  3053               	movlw	83
   907  006E  00F0               	movwf	??_isr
   908  006F                     u16_27:
   909  006F  0BF0               	decfsz	??_isr,f
   910  0070  286F               	goto	u16_27
   911  0071                     i1l742:
   912                           
   913                           ;LAB10.c: 86:             while(crctr3 > 0){
   914  0071  0877               	movf	_crctr3,w
   915  0072  1D03               	btfss	3,2
   916  0073  2875               	goto	u3_21
   917  0074  2876               	goto	u3_20
   918  0075                     u3_21:
   919  0075  2860               	goto	i1l736
   920  0076                     u3_20:
   921  0076                     i1l744:
   922                           
   923                           ;LAB10.c: 92:             TXREG = 0x0D;
   924  0076  300D               	movlw	13
   925  0077  1283               	bcf	3,5	;RP0=0, select bank0
   926  0078  1303               	bcf	3,6	;RP1=0, select bank0
   927  0079  0099               	movwf	25	;volatile
   928  007A                     i1l746:
   929                           
   930                           ;LAB10.c: 94:             op2 = 1;
   931  007A  01FC               	clrf	_op2
   932  007B  0AFC               	incf	_op2,f
   933                           
   934                           ;LAB10.c: 96:             while (op2 == 1){
   935  007C  2895               	goto	i1l754
   936  007D                     i1l748:
   937                           
   938                           ;LAB10.c: 97:                 if (RCREG != 51){
   939  007D  3033               	movlw	51
   940  007E  1283               	bcf	3,5	;RP0=0, select bank0
   941  007F  1303               	bcf	3,6	;RP1=0, select bank0
   942  0080  061A               	xorwf	26,w	;volatile
   943  0081  1903               	btfsc	3,2
   944  0082  2884               	goto	u4_21
   945  0083  2885               	goto	u4_20
   946  0084                     u4_21:
   947  0084  2895               	goto	i1l754
   948  0085                     u4_20:
   949  0085                     i1l750:
   950                           
   951                           ;LAB10.c: 98:                     PORTB = RCREG;
   952  0085  081A               	movf	26,w	;volatile
   953  0086  0086               	movwf	6	;volatile
   954                           
   955                           ;LAB10.c: 99:                     _delay((unsigned long)((1500)*(1000000/4000.0)));
   956  0087  3002               	movlw	2
   957  0088  00F2               	movwf	??_isr+2
   958  0089  30E7               	movlw	231
   959  008A  00F1               	movwf	??_isr+1
   960  008B  3000               	movlw	0
   961  008C  00F0               	movwf	??_isr
   962  008D                     u17_27:
   963  008D  0BF0               	decfsz	??_isr,f
   964  008E  288D               	goto	u17_27
   965  008F  0BF1               	decfsz	??_isr+1,f
   966  0090  288D               	goto	u17_27
   967  0091  0BF2               	decfsz	??_isr+2,f
   968  0092  288D               	goto	u17_27
   969  0093  0000               	nop
   970  0094                     i1l752:
   971                           
   972                           ;LAB10.c: 100:                     op2 = 0;
   973  0094  01FC               	clrf	_op2
   974  0095                     i1l754:
   975                           
   976                           ;LAB10.c: 96:             while (op2 == 1){
   977  0095  037C               	decf	_op2,w
   978  0096  1903               	btfsc	3,2
   979  0097  2899               	goto	u5_21
   980  0098  289A               	goto	u5_20
   981  0099                     u5_21:
   982  0099  287D               	goto	i1l748
   983  009A                     u5_20:
   984  009A                     i1l756:
   985                           
   986                           ;LAB10.c: 103:             crctr3 = 15;
   987  009A  300F               	movlw	15
   988  009B  00F0               	movwf	??_isr
   989  009C  0870               	movf	??_isr,w
   990  009D  00F7               	movwf	_crctr3
   991  009E                     i1l758:
   992                           
   993                           ;LAB10.c: 107:         if (RCREG == 50){
   994  009E  3032               	movlw	50
   995  009F  1283               	bcf	3,5	;RP0=0, select bank0
   996  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   997  00A1  061A               	xorwf	26,w	;volatile
   998  00A2  1D03               	btfss	3,2
   999  00A3  28A5               	goto	u6_21
  1000  00A4  28A6               	goto	u6_20
  1001  00A5                     u6_21:
  1002  00A5  28E5               	goto	i1l784
  1003  00A6                     u6_20:
  1004  00A6  28B8               	goto	i1l768
  1005  00A7                     i1l762:
  1006                           
  1007                           ;LAB10.c: 109:                 crctr2 = crctr2-1;
  1008  00A7  0878               	movf	_crctr2,w
  1009  00A8  3EFF               	addlw	255
  1010  00A9  00F0               	movwf	??_isr
  1011  00AA  0870               	movf	??_isr,w
  1012  00AB  00F8               	movwf	_crctr2
  1013  00AC                     i1l764:
  1014                           
  1015                           ;LAB10.c: 110:                 TXREG = pa[crctr2];
  1016  00AC  0878               	movf	_crctr2,w
  1017  00AD  3E44               	addlw	(low (_pa| 0))& (0+255)
  1018  00AE  0084               	movwf	4
  1019  00AF  1383               	bcf	3,7	;select IRP bank0
  1020  00B0  0800               	movf	0,w
  1021  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1022  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1023  00B3  0099               	movwf	25	;volatile
  1024  00B4                     i1l766:
  1025                           
  1026                           ;LAB10.c: 111:                 _delay((unsigned long)((1)*(1000000/4000.0)));
  1027  00B4  3053               	movlw	83
  1028  00B5  00F0               	movwf	??_isr
  1029  00B6                     u18_27:
  1030  00B6  0BF0               	decfsz	??_isr,f
  1031  00B7  28B6               	goto	u18_27
  1032  00B8                     i1l768:
  1033                           
  1034                           ;LAB10.c: 108:             while(crctr2 > 0){
  1035  00B8  0878               	movf	_crctr2,w
  1036  00B9  1D03               	btfss	3,2
  1037  00BA  28BC               	goto	u7_21
  1038  00BB  28BD               	goto	u7_20
  1039  00BC                     u7_21:
  1040  00BC  28A7               	goto	i1l762
  1041  00BD                     u7_20:
  1042  00BD                     i1l770:
  1043                           
  1044                           ;LAB10.c: 114:             TXREG = 0x0D;
  1045  00BD  300D               	movlw	13
  1046  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00C0  0099               	movwf	25	;volatile
  1049  00C1                     i1l772:
  1050                           
  1051                           ;LAB10.c: 116:             op1 = 1;
  1052  00C1  01FD               	clrf	_op1
  1053  00C2  0AFD               	incf	_op1,f
  1054                           
  1055                           ;LAB10.c: 118:             while (op1 == 1){
  1056  00C3  28DC               	goto	i1l780
  1057  00C4                     i1l774:
  1058                           
  1059                           ;LAB10.c: 119:                 if (RCREG != 50){
  1060  00C4  3032               	movlw	50
  1061  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1062  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1063  00C7  061A               	xorwf	26,w	;volatile
  1064  00C8  1903               	btfsc	3,2
  1065  00C9  28CB               	goto	u8_21
  1066  00CA  28CC               	goto	u8_20
  1067  00CB                     u8_21:
  1068  00CB  28DC               	goto	i1l780
  1069  00CC                     u8_20:
  1070  00CC                     i1l776:
  1071                           
  1072                           ;LAB10.c: 120:                     PORTA = RCREG;
  1073  00CC  081A               	movf	26,w	;volatile
  1074  00CD  0085               	movwf	5	;volatile
  1075                           
  1076                           ;LAB10.c: 121:                     _delay((unsigned long)((1500)*(1000000/4000.0)));
  1077  00CE  3002               	movlw	2
  1078  00CF  00F2               	movwf	??_isr+2
  1079  00D0  30E7               	movlw	231
  1080  00D1  00F1               	movwf	??_isr+1
  1081  00D2  3000               	movlw	0
  1082  00D3  00F0               	movwf	??_isr
  1083  00D4                     u19_27:
  1084  00D4  0BF0               	decfsz	??_isr,f
  1085  00D5  28D4               	goto	u19_27
  1086  00D6  0BF1               	decfsz	??_isr+1,f
  1087  00D7  28D4               	goto	u19_27
  1088  00D8  0BF2               	decfsz	??_isr+2,f
  1089  00D9  28D4               	goto	u19_27
  1090  00DA  0000               	nop
  1091  00DB                     i1l778:
  1092                           
  1093                           ;LAB10.c: 122:                     op1 = 0;
  1094  00DB  01FD               	clrf	_op1
  1095  00DC                     i1l780:
  1096                           
  1097                           ;LAB10.c: 118:             while (op1 == 1){
  1098  00DC  037D               	decf	_op1,w
  1099  00DD  1903               	btfsc	3,2
  1100  00DE  28E0               	goto	u9_21
  1101  00DF  28E1               	goto	u9_20
  1102  00E0                     u9_21:
  1103  00E0  28C4               	goto	i1l774
  1104  00E1                     u9_20:
  1105  00E1                     i1l782:
  1106                           
  1107                           ;LAB10.c: 125:             crctr2 = 15;
  1108  00E1  300F               	movlw	15
  1109  00E2  00F0               	movwf	??_isr
  1110  00E3  0870               	movf	??_isr,w
  1111  00E4  00F8               	movwf	_crctr2
  1112  00E5                     i1l784:
  1113                           
  1114                           ;LAB10.c: 129:         if (RCREG == 49){
  1115  00E5  3031               	movlw	49
  1116  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1117  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1118  00E8  061A               	xorwf	26,w	;volatile
  1119  00E9  1D03               	btfss	3,2
  1120  00EA  28EC               	goto	u10_21
  1121  00EB  28ED               	goto	u10_20
  1122  00EC                     u10_21:
  1123  00EC  2915               	goto	i1l798
  1124  00ED                     u10_20:
  1125  00ED  28FF               	goto	i1l794
  1126  00EE                     i1l788:
  1127                           
  1128                           ;LAB10.c: 131:                 crctr1 = crctr1-1;
  1129  00EE  0879               	movf	_crctr1,w
  1130  00EF  3EFF               	addlw	255
  1131  00F0  00F0               	movwf	??_isr
  1132  00F1  0870               	movf	??_isr,w
  1133  00F2  00F9               	movwf	_crctr1
  1134  00F3                     i1l790:
  1135                           
  1136                           ;LAB10.c: 132:                 TXREG = cadena[crctr1];
  1137  00F3  0879               	movf	_crctr1,w
  1138  00F4  3E20               	addlw	(low (_cadena| 0))& (0+255)
  1139  00F5  0084               	movwf	4
  1140  00F6  1383               	bcf	3,7	;select IRP bank0
  1141  00F7  0800               	movf	0,w
  1142  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1143  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1144  00FA  0099               	movwf	25	;volatile
  1145  00FB                     i1l792:
  1146                           
  1147                           ;LAB10.c: 133:                 _delay((unsigned long)((1)*(1000000/4000.0)));
  1148  00FB  3053               	movlw	83
  1149  00FC  00F0               	movwf	??_isr
  1150  00FD                     u20_27:
  1151  00FD  0BF0               	decfsz	??_isr,f
  1152  00FE  28FD               	goto	u20_27
  1153  00FF                     i1l794:
  1154                           
  1155                           ;LAB10.c: 130:             while(crctr1 > 0){
  1156  00FF  0879               	movf	_crctr1,w
  1157  0100  1D03               	btfss	3,2
  1158  0101  2903               	goto	u11_21
  1159  0102  2904               	goto	u11_20
  1160  0103                     u11_21:
  1161  0103  28EE               	goto	i1l788
  1162  0104                     u11_20:
  1163  0104                     i1l796:
  1164                           
  1165                           ;LAB10.c: 135:             _delay((unsigned long)((3000)*(1000000/4000.0)));
  1166  0104  3004               	movlw	4
  1167  0105  00F2               	movwf	??_isr+2
  1168  0106  30CF               	movlw	207
  1169  0107  00F1               	movwf	??_isr+1
  1170  0108  3001               	movlw	1
  1171  0109  00F0               	movwf	??_isr
  1172  010A                     u21_27:
  1173  010A  0BF0               	decfsz	??_isr,f
  1174  010B  290A               	goto	u21_27
  1175  010C  0BF1               	decfsz	??_isr+1,f
  1176  010D  290A               	goto	u21_27
  1177  010E  0BF2               	decfsz	??_isr+2,f
  1178  010F  290A               	goto	u21_27
  1179  0110  2911               	nop2
  1180                           
  1181                           ;LAB10.c: 136:             crctr1 = 21;
  1182  0111  3015               	movlw	21
  1183  0112  00F0               	movwf	??_isr
  1184  0113  0870               	movf	??_isr,w
  1185  0114  00F9               	movwf	_crctr1
  1186  0115                     i1l798:
  1187                           
  1188                           ;LAB10.c: 138:         bmenu = 1;
  1189  0115  01FB               	clrf	_bmenu
  1190  0116  0AFB               	incf	_bmenu,f
  1191  0117                     i1l90:
  1192  0117  0875               	movf	??_isr+5,w
  1193  0118  008A               	movwf	10
  1194  0119  0874               	movf	??_isr+4,w
  1195  011A  0084               	movwf	4
  1196  011B  0E73               	swapf	??_isr+3,w
  1197  011C  0083               	movwf	3
  1198  011D  0EFE               	swapf	btemp,f
  1199  011E  0E7E               	swapf	btemp,w
  1200  011F  0009               	retfie
  1201  0120                     __end_of_isr:
  1202  007E                     btemp	set	126	;btemp
  1203  007E                     wtemp0	set	126
  1204                           
  1205                           	psect	intentry
  1206  0004                     __pintentry:	
  1207                           ;incstack = 0
  1208                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1209                           
  1210  0004                     interrupt_function:
  1211  007E                     saved_w	set	btemp
  1212  0004  00FE               	movwf	btemp
  1213  0005  0E03               	swapf	3,w
  1214  0006  00F3               	movwf	??_isr+3
  1215  0007  0804               	movf	4,w
  1216  0008  00F4               	movwf	??_isr+4
  1217  0009  080A               	movf	10,w
  1218  000A  00F5               	movwf	??_isr+5
  1219  000B  120A  118A  2851   	ljmp	_isr
  1220                           
  1221                           	psect	config
  1222                           
  1223                           ;Config register CONFIG1 @ 0x2007
  1224                           ;	Oscillator Selection bits
  1225                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1226                           ;	Watchdog Timer Enable bit
  1227                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1228                           ;	Power-up Timer Enable bit
  1229                           ;	PWRTE = ON, PWRT enabled
  1230                           ;	RE3/MCLR pin function select bit
  1231                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1232                           ;	Code Protection bit
  1233                           ;	CP = OFF, Program memory code protection is disabled
  1234                           ;	Data Code Protection bit
  1235                           ;	CPD = OFF, Data memory code protection is disabled
  1236                           ;	Brown Out Reset Selection bits
  1237                           ;	BOREN = OFF, BOR disabled
  1238                           ;	Internal External Switchover bit
  1239                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1240                           ;	Fail-Safe Clock Monitor Enabled bit
  1241                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1242                           ;	Low Voltage Programming Enable bit
  1243                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1244                           ;	In-Circuit Debugger Mode bit
  1245                           ;	DEBUG = 0x1, unprogrammed default
  1246  2007                     	org	8199
  1247  2007  38C4               	dw	14532
  1248                           
  1249                           ;Config register CONFIG2 @ 0x2008
  1250                           ;	Brown-out Reset Selection bit
  1251                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1252                           ;	Flash Program Memory Self Write Enable bits
  1253                           ;	WRT = OFF, Write protection off
  1254  2008                     	org	8200
  1255  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        152
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      0      51
    BANK1            80      0       0
    BANK3            96      0      96
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              6 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60       9      100.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A1      12        0.0%
ABS                  0      0      A1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 09 23:26:28 2021

                      pc 0002                       _pa 0044                       _pb 0035  
                     fsr 0004                      l106 01E5                      l700 01C9  
                    l710 01D5                      l702 01CF                      l720 01DF  
                    l712 01D9                      l704 01D0                      l800 01E6  
                    l722 01E2                      l714 01DA                      l706 01D1  
                    l810 01FE                      l802 01EB                      l724 01E3  
                    l716 01DD                      l708 01D2                      l812 0206  
                    l804 01F1                      l726 01E4                      l718 01DE  
                    l814 020A                      l806 01F6                      l816 020F  
                    l808 01F9                      l818 0213                      l698 01B3  
                    u120 01F1                      u121 01F0                      u130 01F6  
                    u131 01F5                      u140 020F                      u141 020E  
                    u157 0208                      _op1 007D                      _op2 007C  
                    _isr 0051                      fsr0 0004                      indf 0000  
                   ?_isr 0070                     i1l90 0117                     u1_20 0057  
                   u1_21 0056                     u2_20 005F                     u2_21 005E  
                   u3_20 0076                     u3_21 0075                     u4_20 0085  
                   u4_21 0084                     u5_20 009A                     u5_21 0099  
                   u6_20 00A6                     u6_21 00A5                     u7_20 00BD  
                   u7_21 00BC                     u8_20 00CC                     u8_21 00CB  
                   u9_20 00E1                     u9_21 00E0                     _main 01E6  
                   _menu 0190                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l730 0057                    i1l740 006D                    i1l732 0059  
                  i1l750 0085                    i1l742 0071                    i1l752 0094  
                  i1l744 0076                    i1l736 0060                    i1l728 0051  
                  i1l770 00BD                    i1l762 00A7                    i1l754 0095  
                  i1l746 007A                    i1l738 0065                    i1l780 00DC  
                  i1l772 00C1                    i1l764 00AC                    i1l756 009A  
                  i1l748 007D                    i1l790 00F3                    i1l782 00E1  
                  i1l774 00C4                    i1l766 00B4                    i1l758 009E  
                  i1l792 00FB                    i1l776 00CC                    i1l768 00B8  
                  i1l784 00E5                    i1l794 00FF                    i1l778 00DB  
                  i1l796 0104                    i1l788 00EE                    i1l798 0115  
                  _RCREG 001A                    u10_20 00ED                    u10_21 00EC  
                  u11_20 0104                    u11_21 0103                    u20_27 00FD  
                  u21_27 010A                    u16_27 006F                    u17_27 008D  
                  _SPBRG 0099                    u18_27 00B6                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    u19_27 00D4  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TXREG 0019                    _bmenu 007B                    _crctr 007A  
                  _setup 01B3                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0218  
                 ??_main 0076                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A                   _cadena 0020                   _crctr1 0079  
                 _crctr2 0078                   _crctr3 0077             __pdataCOMMON 0077  
                 saved_w 007E  __end_of__initialization 004D           __pcstackCOMMON 0070  
           __pidataBANK0 0180             __pidataBANK3 0120            __end_of_setup 01E6  
                ??_setup 0076               __pmaintext 01E6               __pintentry 0004  
                __ptext1 01B3                  __ptext2 0051             __size_of_isr 00CF  
   end_of_initialization 004D                _RCSTAbits 0018                _TXSTAbits 0098  
          __pidataCOMMON 022B              _BAUDCTLbits 0187      start_initialization 0011  
            __end_of_isr 0120               init_fetch0 0218              __pdataBANK0 0020  
            __pdataBANK3 0190              __pbssCOMMON 007C                ___latbits 0002  
         __size_of_setup 0033        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C            __size_of_main 0032               _INTCONbits 000B  
               init_ram0 021C                 intlevel1 0000               _OSCCONbits 008F  
